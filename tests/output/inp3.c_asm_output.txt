section .data
__printf_size: equ 16
__doub_size: equ 32
__temp_str_2 db `Fact: %u\n`, 0
__fact_size: equ 128
__fibo_size: equ 144
__temp_str_5 db `I: %u\n`, 0
__temp_str_6 db `%c %c %u`, 0
__temp_str_7 db `\n`, 0
__temp_str_8 db `Result: %u\n`, 0
__temp_str_9 db `Addr of a: %u\n`, 0
__temp_str_10 db `Value of b: %u\n`, 0
__temp_str_11 db `Addr of c: %u\n`, 0
__temp_str_12 db `Double of 123: %u\n`, 0
__temp_str_13 db `Factorial 5: %u\n`, 0
__temp_str_14 db `TRUE\n`, 0
__temp_str_15 db `FALSE\n`, 0
__temp_str_16 db `TRUE\n`, 0
__temp_str_17 db `FALSE\n`, 0
__temp_str_18 db `%u\n`, 0
__temp_str_19 db `%u `, 0
__temp_str_20 db `%u `, 0
__temp_str_21 db `%u `, 0
__temp_str_22 db `%u `, 0
__temp_str_23 db `%u `, 0
__temp_str_24 db `%u `, 0
__temp_str_25 db `%u `, 0
__temp_str_26 db `%u `, 0
__temp_str_27 db `%u\n`, 0
__temp_str_28 db `%u `, 0
__temp_str_29 db `\nDONE!\n`, 0
__temp_str_30 db `%u\n`, 0
__main_size: equ 1632
section .text
extern printf
global doub
doub:
push rbp
mov rbp, rsp
sub rsp, __doub_size
mov [rsp+0], rdi
mov rax, rsp
add rax, 0
mov [rsp+8], rax
mov rax, [rsp+0]
mov rbx, 2
mul rbx
mov [rsp+16], rax
mov rax, [rsp+16]
mov rsp, rbp
pop rbp
ret
mov rsp, rbp
pop rbp
ret
global fact
fact:
push rbp
mov rbp, rsp
sub rsp, __fact_size
mov [rsp+0], rdi
mov rax, __temp_str_2
mov [rsp+8], rax
mov rax, rsp
add rax, 0
mov [rsp+16], rax
mov rax, [rsp+0]
mov [rsp+24], rax
mov rdi, [rsp+8]
mov rsi, [rsp+24]
mov rax, rsp
add rax, 0
mov [rsp+32], rax
call printf
mov [rsp+40], rax
mov rax, rsp
add rax, 0
mov [rsp+48], rax
mov rax, 0
cmp rax, [rsp+0]
je __tmp_label_0
mov rax, rsp
add rax, 0
mov [rsp+56], rax
mov rax, rsp
add rax, 0
mov [rsp+64], rax
mov rax, [rsp+0]
mov rbx, 1
sub rax, rbx
mov [rsp+72], rax
mov rax, [rsp+72]
mov [rsp+80], rax
mov rdi, [rsp+80]
mov rax, rsp
add rax, 0
mov [rsp+88], rax
call fact
mov [rsp+96], rax
mov rax, [rsp+0]
mov rbx, [rsp+96]
mul rbx
mov [rsp+104], rax
mov rax, [rsp+104]
mov rsp, rbp
pop rbp
ret
jmp __tmp_label_1
__tmp_label_0:
mov rax, 1
mov rsp, rbp
pop rbp
ret
__tmp_label_1:
mov rsp, rbp
pop rbp
ret
global fibo
fibo:
push rbp
mov rbp, rsp
sub rsp, __fibo_size
mov [rsp+0], rdi
mov rax, rsp
add rax, 0
mov [rsp+8], rax
mov rax, [rsp+0]
mov rbx, 0
cmp rax, rbx
je __tmp_label_2
mov rax, 0
jmp __tmp_label_3
__tmp_label_2:
mov rax, 1
__tmp_label_3:
mov [rsp+16], rax
mov rax, 0
cmp rax, [rsp+16]
je __tmp_label_4
mov rax, 1
mov rsp, rbp
pop rbp
ret
jmp __tmp_label_5
__tmp_label_4:
mov rax, rsp
add rax, 0
mov [rsp+24], rax
mov rax, [rsp+0]
mov rbx, 1
cmp rax, rbx
je __tmp_label_6
mov rax, 0
jmp __tmp_label_7
__tmp_label_6:
mov rax, 1
__tmp_label_7:
mov [rsp+32], rax
mov rax, 0
cmp rax, [rsp+32]
je __tmp_label_8
mov rax, 1
mov rsp, rbp
pop rbp
ret
jmp __tmp_label_9
__tmp_label_8:
mov rax, rsp
add rax, 0
mov [rsp+40], rax
mov rax, [rsp+0]
mov rbx, 1
sub rax, rbx
mov [rsp+48], rax
mov rax, [rsp+48]
mov [rsp+56], rax
mov rdi, [rsp+56]
mov rax, rsp
add rax, 0
mov [rsp+64], rax
call fibo
mov [rsp+72], rax
mov rax, rsp
add rax, 0
mov [rsp+80], rax
mov rax, [rsp+0]
mov rbx, 2
sub rax, rbx
mov [rsp+88], rax
mov rax, [rsp+88]
mov [rsp+96], rax
mov rdi, [rsp+96]
mov rax, rsp
add rax, 0
mov [rsp+104], rax
call fibo
mov [rsp+112], rax
mov rax, [rsp+72]
mov rbx, [rsp+112]
add rax, rbx
mov [rsp+120], rax
mov rax, [rsp+120]
mov rsp, rbp
pop rbp
ret
__tmp_label_9:
__tmp_label_5:
mov rsp, rbp
pop rbp
ret
global main
main:
push rbp
mov rbp, rsp
sub rsp, __main_size
mov qword [rsp+0], 8
add [rsp+0], rsp
mov rax, 0
mov [rsp+0], rax
__tmp_label_10:
mov rax, rsp
add rax, 0
mov [rsp+16], rax
mov rax, [rsp+0]
mov rbx, 10
cmp rax, rbx
jl __tmp_label_12
mov rax, 0
jmp __tmp_label_13
__tmp_label_12:
mov rax, 1
__tmp_label_13:
mov [rsp+24], rax
mov rax, [rsp+24]
cmp rax, 0
je __tmp_label_11
mov rax, __temp_str_5
mov [rsp+32], rax
mov rax, rsp
add rax, 0
mov [rsp+40], rax
mov rax, [rsp+0]
mov [rsp+48], rax
mov rdi, [rsp+32]
mov rsi, [rsp+48]
mov rax, rsp
add rax, 0
mov [rsp+56], rax
call printf
mov [rsp+64], rax
mov rax, rsp
add rax, 0
mov [rsp+72], rax
mov rax, rsp
add rax, 0
mov [rsp+80], rax
mov rax, [rsp+0]
mov rbx, 1
add rax, rbx
mov [rsp+88], rax
mov rax, [rsp+0]
mov rbx, [rsp+88]
mov rax, [rsp+88]
mov rbx, [rsp+72]
mov [rbx], rax
mov [rsp+96], rax
jmp __tmp_label_10
__tmp_label_11:
mov rax, __temp_str_6
mov [rsp+32], rax
mov rax, 97
mov [rsp+40], rax
mov rax, 110
mov [rsp+48], rax
mov rax, 99
mov [rsp+56], rax
mov rdi, [rsp+32]
mov rsi, [rsp+40]
mov rdx, [rsp+48]
mov rcx, [rsp+56]
mov rax, rsp
add rax, 0
mov [rsp+64], rax
call printf
mov [rsp+72], rax
mov rax, __temp_str_7
mov [rsp+80], rax
mov rdi, [rsp+80]
mov rax, rsp
add rax, 0
mov [rsp+88], rax
call printf
mov [rsp+96], rax
mov qword [rsp+104], 112
add [rsp+104], rsp
mov rax, 10
mov [rsp+104], rax
mov qword [rsp+120], 128
add [rsp+120], rsp
mov rax, 20
mov [rsp+120], rax
mov qword [rsp+136], 144
add [rsp+136], rsp
mov rax, rsp
add rax, 104
mov [rsp+152], rax
mov rax, rsp
add rax, 120
mov [rsp+160], rax
mov rax, [rsp+104]
mov rbx, [rsp+120]
mul rbx
mov [rsp+168], rax
mov rax, [rsp+168]
mov [rsp+136], rax
mov qword [rsp+176], 184
add [rsp+176], rsp
mov rax, rsp
add rax, 136
mov [rsp+192], rax
mov rax, rsp
add rax, 136
mov [rsp+200], rax
mov rax, rsp
add rax, 104
mov [rsp+208], rax
mov rax, [rsp+136]
mov rbx, [rsp+104]
add rax, rbx
mov [rsp+216], rax
mov rax, [rsp+136]
mov rbx, [rsp+216]
mul rbx
mov [rsp+224], rax
mov rax, [rsp+224]
mov [rsp+176], rax
mov rax, __temp_str_8
mov [rsp+232], rax
mov rax, rsp
add rax, 136
mov [rsp+240], rax
mov rax, rsp
add rax, 136
mov [rsp+248], rax
mov rax, [rsp+136]
mov rbx, [rsp+136]
add rax, rbx
mov [rsp+256], rax
mov rax, rsp
add rax, 176
mov [rsp+264], rax
mov rax, [rsp+256]
mov rbx, [rsp+176]
add rax, rbx
mov [rsp+272], rax
mov rax, rsp
add rax, 120
mov [rsp+280], rax
mov rax, rsp
add rax, 104
mov [rsp+288], rax
mov rax, [rsp+120]
mov rbx, [rsp+104]
add rax, rbx
mov [rsp+296], rax
mov rax, rsp
add rax, 104
mov [rsp+304], rax
mov rax, [rsp+296]
mov rbx, [rsp+104]
mul rbx
mov [rsp+312], rax
mov rax, [rsp+272]
mov rbx, [rsp+312]
add rax, rbx
mov [rsp+320], rax
mov rax, [rsp+320]
mov [rsp+328], rax
mov rdi, [rsp+232]
mov rsi, [rsp+328]
mov rax, rsp
add rax, 0
mov [rsp+336], rax
call printf
mov [rsp+344], rax
mov qword [rsp+352], 360
add [rsp+352], rsp
mov rax, rsp
add rax, 136
mov [rsp+368], rax
mov rax, [rsp+368]
mov [rsp+352], rax
mov rax, __temp_str_9
mov [rsp+376], rax
mov rax, rsp
add rax, 104
mov [rsp+384], rax
mov rax, [rsp+384]
mov [rsp+392], rax
mov rdi, [rsp+376]
mov rsi, [rsp+392]
mov rax, rsp
add rax, 0
mov [rsp+400], rax
call printf
mov [rsp+408], rax
mov rax, __temp_str_10
mov [rsp+416], rax
mov rax, rsp
add rax, 104
mov [rsp+424], rax
mov rax, [rsp+424]
mov rbx, 8
add rax, rbx
mov [rsp+432], rax
mov rax, [rsp+432]
mov [rsp+440], rax
mov rax, [rax]
mov [rsp+448], rax
mov rax, [rsp+448]
mov [rsp+456], rax
mov rdi, [rsp+416]
mov rsi, [rsp+456]
mov rax, rsp
add rax, 0
mov [rsp+464], rax
call printf
mov [rsp+472], rax
mov rax, __temp_str_11
mov [rsp+480], rax
mov rax, rsp
add rax, 352
mov [rsp+488], rax
mov rax, [rsp+352]
mov [rsp+496], rax
mov rdi, [rsp+480]
mov rsi, [rsp+496]
mov rax, rsp
add rax, 0
mov [rsp+504], rax
call printf
mov [rsp+512], rax
mov rax, __temp_str_12
mov [rsp+520], rax
mov rax, 123
mov [rsp+528], rax
mov rdi, [rsp+528]
mov rax, rsp
add rax, 0
mov [rsp+536], rax
call doub
mov [rsp+544], rax
mov rax, 123
mov rbx, [rsp+544]
mul rbx
mov [rsp+552], rax
mov rax, [rsp+552]
mov [rsp+560], rax
mov rdi, [rsp+560]
mov rax, rsp
add rax, 0
mov [rsp+568], rax
call doub
mov [rsp+576], rax
mov rax, [rsp+576]
mov rbx, 2
mul rbx
mov [rsp+584], rax
mov rax, [rsp+584]
mov [rsp+592], rax
mov rdi, [rsp+592]
mov rax, rsp
add rax, 0
mov [rsp+600], rax
call doub
mov [rsp+608], rax
mov rax, [rsp+608]
mov rbx, 10
add rax, rbx
mov [rsp+616], rax
mov rax, [rsp+616]
mov [rsp+624], rax
mov rdi, [rsp+520]
mov rsi, [rsp+624]
mov rax, rsp
add rax, 0
mov [rsp+632], rax
call printf
mov [rsp+640], rax
mov rax, __temp_str_13
mov [rsp+648], rax
mov rax, 5
mov [rsp+656], rax
mov rdi, [rsp+656]
mov rax, rsp
add rax, 0
mov [rsp+664], rax
call fact
mov [rsp+672], rax
mov rax, [rsp+672]
mov [rsp+680], rax
mov rdi, [rsp+648]
mov rsi, [rsp+680]
mov rax, rsp
add rax, 0
mov [rsp+688], rax
call printf
mov [rsp+696], rax
mov rax, 0
cmp rax, 1
je __tmp_label_14
mov rax, __temp_str_14
mov [rsp+704], rax
mov rdi, [rsp+704]
mov rax, rsp
add rax, 0
mov [rsp+712], rax
call printf
mov [rsp+720], rax
jmp __tmp_label_15
__tmp_label_14:
mov rax, __temp_str_15
mov [rsp+704], rax
mov rdi, [rsp+704]
mov rax, rsp
add rax, 0
mov [rsp+712], rax
call printf
mov [rsp+720], rax
__tmp_label_15:
mov rax, 0
cmp rax, 1
je __tmp_label_16
mov rax, __temp_str_16
mov [rsp+704], rax
mov rdi, [rsp+704]
mov rax, rsp
add rax, 0
mov [rsp+712], rax
call printf
mov [rsp+720], rax
jmp __tmp_label_17
__tmp_label_16:
mov rax, __temp_str_17
mov [rsp+704], rax
mov rdi, [rsp+704]
mov rax, rsp
add rax, 0
mov [rsp+712], rax
call printf
mov [rsp+720], rax
__tmp_label_17:
mov rax, __temp_str_18
mov [rsp+704], rax
mov rax, 5
mov rbx, 1
cmp rax, rbx
jne __tmp_label_18
mov rax, 0
jmp __tmp_label_19
__tmp_label_18:
mov rax, 1
__tmp_label_19:
mov [rsp+712], rax
mov rax, [rsp+712]
mov [rsp+720], rax
mov rdi, [rsp+704]
mov rsi, [rsp+720]
mov rax, rsp
add rax, 0
mov [rsp+728], rax
call printf
mov [rsp+736], rax
mov rax, __temp_str_19
mov [rsp+744], rax
mov rax, 0
mov [rsp+752], rax
mov rdi, [rsp+752]
mov rax, rsp
add rax, 0
mov [rsp+760], rax
call fibo
mov [rsp+768], rax
mov rax, [rsp+768]
mov [rsp+776], rax
mov rdi, [rsp+744]
mov rsi, [rsp+776]
mov rax, rsp
add rax, 0
mov [rsp+784], rax
call printf
mov [rsp+792], rax
mov rax, __temp_str_20
mov [rsp+800], rax
mov rax, 1
mov [rsp+808], rax
mov rdi, [rsp+808]
mov rax, rsp
add rax, 0
mov [rsp+816], rax
call fibo
mov [rsp+824], rax
mov rax, [rsp+824]
mov [rsp+832], rax
mov rdi, [rsp+800]
mov rsi, [rsp+832]
mov rax, rsp
add rax, 0
mov [rsp+840], rax
call printf
mov [rsp+848], rax
mov rax, __temp_str_21
mov [rsp+856], rax
mov rax, 2
mov [rsp+864], rax
mov rdi, [rsp+864]
mov rax, rsp
add rax, 0
mov [rsp+872], rax
call fibo
mov [rsp+880], rax
mov rax, [rsp+880]
mov [rsp+888], rax
mov rdi, [rsp+856]
mov rsi, [rsp+888]
mov rax, rsp
add rax, 0
mov [rsp+896], rax
call printf
mov [rsp+904], rax
mov rax, __temp_str_22
mov [rsp+912], rax
mov rax, 3
mov [rsp+920], rax
mov rdi, [rsp+920]
mov rax, rsp
add rax, 0
mov [rsp+928], rax
call fibo
mov [rsp+936], rax
mov rax, [rsp+936]
mov [rsp+944], rax
mov rdi, [rsp+912]
mov rsi, [rsp+944]
mov rax, rsp
add rax, 0
mov [rsp+952], rax
call printf
mov [rsp+960], rax
mov rax, __temp_str_23
mov [rsp+968], rax
mov rax, 4
mov [rsp+976], rax
mov rdi, [rsp+976]
mov rax, rsp
add rax, 0
mov [rsp+984], rax
call fibo
mov [rsp+992], rax
mov rax, [rsp+992]
mov [rsp+1000], rax
mov rdi, [rsp+968]
mov rsi, [rsp+1000]
mov rax, rsp
add rax, 0
mov [rsp+1008], rax
call printf
mov [rsp+1016], rax
mov rax, __temp_str_24
mov [rsp+1024], rax
mov rax, 5
mov [rsp+1032], rax
mov rdi, [rsp+1032]
mov rax, rsp
add rax, 0
mov [rsp+1040], rax
call fibo
mov [rsp+1048], rax
mov rax, [rsp+1048]
mov [rsp+1056], rax
mov rdi, [rsp+1024]
mov rsi, [rsp+1056]
mov rax, rsp
add rax, 0
mov [rsp+1064], rax
call printf
mov [rsp+1072], rax
mov rax, __temp_str_25
mov [rsp+1080], rax
mov rax, 6
mov [rsp+1088], rax
mov rdi, [rsp+1088]
mov rax, rsp
add rax, 0
mov [rsp+1096], rax
call fibo
mov [rsp+1104], rax
mov rax, [rsp+1104]
mov [rsp+1112], rax
mov rdi, [rsp+1080]
mov rsi, [rsp+1112]
mov rax, rsp
add rax, 0
mov [rsp+1120], rax
call printf
mov [rsp+1128], rax
mov rax, __temp_str_26
mov [rsp+1136], rax
mov rax, 7
mov [rsp+1144], rax
mov rdi, [rsp+1144]
mov rax, rsp
add rax, 0
mov [rsp+1152], rax
call fibo
mov [rsp+1160], rax
mov rax, [rsp+1160]
mov [rsp+1168], rax
mov rdi, [rsp+1136]
mov rsi, [rsp+1168]
mov rax, rsp
add rax, 0
mov [rsp+1176], rax
call printf
mov [rsp+1184], rax
mov rax, __temp_str_27
mov [rsp+1192], rax
mov rax, 8
mov [rsp+1200], rax
mov rdi, [rsp+1200]
mov rax, rsp
add rax, 0
mov [rsp+1208], rax
call fibo
mov [rsp+1216], rax
mov rax, [rsp+1216]
mov [rsp+1224], rax
mov rdi, [rsp+1192]
mov rsi, [rsp+1224]
mov rax, rsp
add rax, 0
mov [rsp+1232], rax
call printf
mov [rsp+1240], rax
mov qword [rsp+1248], 1256
add [rsp+1248], rsp
mov rax, 0
mov [rsp+1248], rax
__tmp_label_20:
mov rax, rsp
add rax, 1248
mov [rsp+1264], rax
mov rax, [rsp+1248]
mov rbx, 20
cmp rax, rbx
jl __tmp_label_22
mov rax, 0
jmp __tmp_label_23
__tmp_label_22:
mov rax, 1
__tmp_label_23:
mov [rsp+1272], rax
mov rax, [rsp+1272]
cmp rax, 0
je __tmp_label_21
mov rax, __temp_str_28
mov [rsp+1280], rax
mov rax, rsp
add rax, 1248
mov [rsp+1288], rax
mov rax, [rsp+1248]
mov [rsp+1296], rax
mov rdi, [rsp+1296]
mov rax, rsp
add rax, 0
mov [rsp+1304], rax
call fibo
mov [rsp+1312], rax
mov rax, [rsp+1312]
mov [rsp+1320], rax
mov rdi, [rsp+1280]
mov rsi, [rsp+1320]
mov rax, rsp
add rax, 0
mov [rsp+1328], rax
call printf
mov [rsp+1336], rax
mov rax, rsp
add rax, 1248
mov [rsp+1280], rax
mov rax, rsp
add rax, 1248
mov [rsp+1288], rax
mov rax, [rsp+1248]
mov rbx, 1
add rax, rbx
mov [rsp+1296], rax
mov rax, [rsp+1248]
mov rbx, [rsp+1296]
mov rax, [rsp+1296]
mov rbx, [rsp+1280]
mov [rbx], rax
mov [rsp+1304], rax
jmp __tmp_label_20
__tmp_label_21:
mov rax, __temp_str_29
mov [rsp+1248], rax
mov rdi, [rsp+1248]
mov rax, rsp
add rax, 0
mov [rsp+1256], rax
call printf
mov [rsp+1264], rax
mov rax, __temp_str_30
mov [rsp+1272], rax
mov rax, 1
mov rbx, 1
cmp rax, 0
je __tmp_label_24
mov rax, rbx
jmp __tmp_label_25
__tmp_label_24:
mov rax, 0
__tmp_label_25:
mov [rsp+1280], rax
mov rax, 1
mov rbx, 1
cmp rax, 0
je __tmp_label_26
mov rax, rbx
jmp __tmp_label_27
__tmp_label_26:
mov rax, 0
__tmp_label_27:
mov [rsp+1288], rax
mov rax, [rsp+1280]
mov rbx, [rsp+1288]
cmp rax, 0
je __tmp_label_28
mov rax, rbx
jmp __tmp_label_29
__tmp_label_28:
mov rax, 0
__tmp_label_29:
mov [rsp+1296], rax
mov rax, [rsp+1296]
mov [rsp+1304], rax
mov rdi, [rsp+1272]
mov rsi, [rsp+1304]
mov rax, rsp
add rax, 0
mov [rsp+1312], rax
call printf
mov [rsp+1320], rax
mov rsp, rbp
pop rbp
ret
extern exit
global _start
_start:
; Pass argc and argv
mov rdi, [rsp]
mov rsi, rsp
add rsi, 8
call main
mov rdi, 0
call exit
